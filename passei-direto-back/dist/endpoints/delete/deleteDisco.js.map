{"version":3,"sources":["../../../src/endpoints/delete/deleteDisco.js"],"names":["requestBodyValidation","id","requestBody","logger","warn","isNaN","main","request","response","body","discoDao","DiscoDao","deleteDisco","then","info","status","send","catch","error","json","message","route"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;AAEA,IAAMA,wBAAwB,SAAxBA,qBAAwB,cAAe;AAAA,MACnCC,EADmC,GAC5BC,WAD4B,CACnCD,EADmC;;AAE3C,UAAQ,IAAR;AACE,SAAK,CAACA,EAAN;AACEE,uBAAOC,IAAP,CAAY,mCAAZ;AACA,aAAO,KAAP;AACF,SAAKC,MAAMJ,EAAN,CAAL;AACEE,uBAAOC,IAAP,CAAY,oCAAZ;AACA,aAAO,KAAP;AACF;AACE,aAAO,IAAP;AARJ;AAUD,CAZD;;AAcA,IAAME,OAAO,SAAPA,IAAO,CAACC,OAAD,EAAUC,QAAV,EAAuB;AAClC,MAAIR,sBAAsBO,QAAQE,IAA9B,CAAJ,EAAyC;AAAA,QAC/BR,EAD+B,GACxBM,QAAQE,IADgB,CAC/BR,EAD+B;;AAEvC,QAAMS,WAAW,IAAIC,eAAJ,EAAjB;AACAD,aACGE,WADH,CACeX,EADf,EAEGY,IAFH,CAEQ,YAAM;AACVV,uBAAOW,IAAP,CAAY,+BAAZ;AACAN,eAASO,MAAT,CAAgB,GAAhB,EAAqBC,IAArB;AACD,KALH,EAMGC,KANH,CAMS,iBAAS;AACdd,uBAAOe,KAAP,CAAaA,KAAb;AACAV,eAASO,MAAT,CAAgB,GAAhB,EAAqBI,IAArB,CAA0B;AACxBD,eAAO,GADiB;AAExBE,iBACE;AAHsB,OAA1B;AAKD,KAbH;AAcD,GAjBD,MAiBO;AACLZ,aAASO,MAAT,CAAgB,GAAhB,EAAqBI,IAArB,CAA0B;AACxBD,aAAO,GADiB;AAExBE,eAAS;AAFe,KAA1B;AAID;AACF,CAxBD;;kBA0Be;AACbC,SAAO,cADM;AAEbf;AAFa,C","file":"deleteDisco.js","sourcesContent":["import DiscoDao from '../../model/Disco';\nimport logger from '../../utils/logger';\n\nconst requestBodyValidation = requestBody => {\n  const { id } = requestBody;\n  switch (true) {\n    case !id:\n      logger.warn(' PUT request received without id ');\n      return false;\n    case isNaN(id):\n      logger.warn(' PUT request received with NaN id ');\n      return false;\n    default:\n      return true;\n  }\n};\n\nconst main = (request, response) => {\n  if (requestBodyValidation(request.body)) {\n    const { id } = request.body;\n    const discoDao = new DiscoDao();\n    discoDao\n      .deleteDisco(id)\n      .then(() => {\n        logger.info('Register delete from Database');\n        response.status(200).send();\n      })\n      .catch(error => {\n        logger.error(error);\n        response.status(500).json({\n          error: 500,\n          message:\n            'Internal Server Error - Please contact the system administrator',\n        });\n      });\n  } else {\n    response.status(400).json({\n      error: 400,\n      message: 'Error while processing request body',\n    });\n  }\n};\n\nexport default {\n  route: '/deleteDisco',\n  main,\n};\n"]}